# Generated by Django 4.2.1 on 2023-06-10 18:59

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('inspection_id', models.IntegerField(primary_key=True, serialize=False)),
                ('certificate_no', models.CharField(blank=True, max_length=20, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('inspected_by', models.CharField(blank=True, max_length=50, null=True)),
                ('inspection_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InspectionCenter',
            fields=[
                ('center_id', models.IntegerField(primary_key=True, serialize=False)),
                ('center_name', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('owner_id', models.IntegerField(primary_key=True, serialize=False)),
                ('owner_info', models.CharField(max_length=50)),
                ('owner_type', models.CharField(max_length=20)),
                ('province', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.IntegerField(primary_key=True, serialize=False)),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('plate_no', models.CharField(max_length=20)),
                ('province', models.CharField(max_length=50)),
                ('registration_cert_no', models.CharField(max_length=20)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('usage_purpose', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.owner')),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('upload_id', models.IntegerField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=50)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('upload_date', models.DateField(blank=True, null=True)),
                ('center_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inspectioncenter')),
            ],
        ),
        migrations.CreateModel(
            name='InspectionRecord',
            fields=[
                ('record_id', models.IntegerField(primary_key=True, serialize=False)),
                ('result', models.CharField(max_length=50)),
                ('center_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inspectioncenter')),
                ('inspection_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inspection')),
            ],
        ),
        migrations.AddField(
            model_name='inspection',
            name='vehicle_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vehicle'),
        ),
    ]
